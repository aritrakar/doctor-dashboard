[{"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\index.js":"1","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\App.js":"2","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\index.js":"3","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Form2.js":"4","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Login.js":"5","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\LandingPage.js":"6","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Navbar.js":"7","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocSignUp.js":"8","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatSignUp.js":"9","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocDash.js":"10","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Contact.js":"11","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Support.js":"12","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatDash.js":"13","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\About.js":"14","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocProfile.js":"15","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocPatients.js":"16","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatProfile.js":"17","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Room.js":"18","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocPayments.js":"19","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocConsultations.js":"20","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatPrescriptions.js":"21","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatPayments.js":"22","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatConsultations.js":"23","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\SpecialityData.js":"24","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocRow.js":"25","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatRow.js":"26","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\firebase.js":"27","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Sidebar.js":"28","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\SidebarData.js":"29"},{"size":168,"mtime":1610345658171,"results":"30","hashOfConfig":"31"},{"size":3905,"mtime":1610898100580,"results":"32","hashOfConfig":"31"},{"size":1171,"mtime":1610886548084,"results":"33","hashOfConfig":"31"},{"size":1221,"mtime":1610369050111,"results":"34","hashOfConfig":"31"},{"size":3189,"mtime":1610896217469,"results":"35","hashOfConfig":"31"},{"size":2966,"mtime":1610896226089,"results":"36","hashOfConfig":"31"},{"size":1823,"mtime":1610896196384,"results":"37","hashOfConfig":"31"},{"size":6528,"mtime":1610896247795,"results":"38","hashOfConfig":"31"},{"size":6573,"mtime":1610896155842,"results":"39","hashOfConfig":"31"},{"size":6586,"mtime":1610896266122,"results":"40","hashOfConfig":"31"},{"size":1230,"mtime":1610868578295,"results":"41","hashOfConfig":"31"},{"size":1423,"mtime":1610896057993,"results":"42","hashOfConfig":"31"},{"size":7791,"mtime":1610896182420,"results":"43","hashOfConfig":"31"},{"size":2069,"mtime":1610896281790,"results":"44","hashOfConfig":"31"},{"size":2962,"mtime":1610896041668,"results":"45","hashOfConfig":"31"},{"size":3198,"mtime":1610896357260,"results":"46","hashOfConfig":"31"},{"size":4312,"mtime":1610896164146,"results":"47","hashOfConfig":"31"},{"size":6566,"mtime":1610897245272,"results":"48","hashOfConfig":"31"},{"size":2379,"mtime":1610896352429,"results":"49","hashOfConfig":"31"},{"size":4455,"mtime":1610896365388,"results":"50","hashOfConfig":"31"},{"size":5886,"mtime":1610896324182,"results":"51","hashOfConfig":"31"},{"size":1539,"mtime":1610896336184,"results":"52","hashOfConfig":"31"},{"size":1885,"mtime":1610896341367,"results":"53","hashOfConfig":"31"},{"size":1528,"mtime":1610859875160,"results":"54","hashOfConfig":"31"},{"size":4690,"mtime":1610884156898,"results":"55","hashOfConfig":"31"},{"size":3760,"mtime":1610886777186,"results":"56","hashOfConfig":"31"},{"size":614,"mtime":1610771942344,"results":"57","hashOfConfig":"31"},{"size":2444,"mtime":1610896120122,"results":"58","hashOfConfig":"31"},{"size":1505,"mtime":1610896092692,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fktj7o",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\index.js",[],["129","130"],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\App.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\index.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Form2.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Login.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\LandingPage.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Navbar.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocSignUp.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatSignUp.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocDash.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Contact.js",["131","132"],"import React from \"react\";\r\nimport \"./Contact.css\";\r\nimport Navbar from \"./Navbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport support from \"../images/support.svg\";\r\n\r\nclass Contact extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\" style={{ backgroundColor: \"transparent\" }}>\r\n        <Navbar />\r\n        <div id=\"dashBody-contact\">\r\n          <div id=\"content-contact\" style={{ margin: \"auto\" }}>\r\n            <h1 style={{ fontSize: 45 }}>Contact</h1>\r\n            <h2>\r\n              <a href=\"mailto:docdashco@gmail.com\">\r\n                Email: docdashco@gmail.com\r\n              </a>\r\n              <br></br>\r\n              <strong>OR</strong>\r\n              <br />\r\n              <a href=\"mailto:a8kar@uwaterloo.ca\">a8kar@uwaterloo.ca</a>\r\n            </h2>\r\n            <br />\r\n            <h2>Phone: XXX-XXX-XXXX</h2>\r\n          </div>\r\n\r\n          <img\r\n            id=\"svg\"\r\n            src={support}\r\n            alt=\"svg\"\r\n            style={{ width: \"39%\", marginRight: \"5%\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Contact);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Support.js",["133","134"],"import React from \"react\";\r\nimport \"./Support.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport support from \"../images/support.svg\";\r\nimport firebase from \"../firebase\";\r\nclass Support extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        return true;\r\n      } else {\r\n        alert(\"Please login to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\">\r\n        <Sidebar type=\"patient\" />\r\n        <h1 style={{ fontSize: 45 }}>Support</h1>\r\n        <div id=\"dashBody2\">\r\n          <div id=\"content2\" style={{ margin: \"auto\" }}>\r\n            <h2>\r\n              Email: docdashco@gmail.com\r\n              <br></br>\r\n              <strong>OR</strong>\r\n              <br />\r\n              a8kar@uwaterloo.ca\r\n            </h2>\r\n            <br />\r\n            <h2>Phone: 123-456-7890</h2>\r\n          </div>\r\n\r\n          <img id=\"svg\" src={support} alt=\"svg\" style={{ width: \"45%\" }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Support);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatDash.js",["135"],"import React from \"react\";\r\nimport \"./Patient/PatDash.css\";\r\nimport firebase from \"../firebase\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport PatRow from \"./Patient/PatRow.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"react-modal\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport animationData from \"../images/lottie1\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nclass PatDash extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      userID: \"\",\r\n      patientObject: {},\r\n      loaded: false,\r\n      doctors: [],\r\n      upcomingAppointments: [],\r\n      recentAppointments: [],\r\n      modalOpen: false,\r\n      isDoctorModalOpen: false,\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        this.setState({ email: cred.email });\r\n\r\n        //console.log(\"cred patient: \", cred);\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            this.setState({ patientObject: doc.data() });\r\n          })\r\n          .then(() => {\r\n            const patObj = this.state.patientObject;\r\n            console.log(\"patObj: \", patObj);\r\n            var upcomingAppts = patObj.consultations?.filter((item) => {\r\n              const currentDate = new Date();\r\n              const nextDate = new Date(item.next_consul.seconds * 1000);\r\n              var result = nextDate > currentDate;\r\n              return result;\r\n            });\r\n\r\n            var recentAppts = patObj.consultations?.filter((item) => {\r\n              const currentDate = new Date();\r\n              const prevDate = new Date(item.last_consul.seconds * 1000);\r\n              var result = prevDate < currentDate;\r\n              //var c = currentDate - prevDate;\r\n              //console.log(\"c: \", c);\r\n              //console.log(\"comparison2: \", result);\r\n              return result;\r\n            });\r\n            this.setState({\r\n              upcomingAppointments: upcomingAppts,\r\n              recentAppointments: recentAppts,\r\n            });\r\n\r\n            firebase\r\n              .firestore()\r\n              .collection(\"Doctors\")\r\n              .onSnapshot((snapshot) => {\r\n                const doctors = [];\r\n                snapshot.forEach((doc) => {\r\n                  doctors.push({ id: doc.id, data: doc.data() });\r\n                });\r\n                this.setState({ doctors: doctors });\r\n              });\r\n            this.setState({ loaded: true });\r\n            //console.log(\"patientObject: \", this.state.patientObject);\r\n\r\n            /*\r\n            var appt1 = [];\r\n            var appt2 = [];\r\n\r\n            const currentDate = new Date();\r\n            for (\r\n              let i = 0;\r\n              i < this.state.patientObject.consultations.length;\r\n              i++\r\n            ) {\r\n              var newDate = new Date(\r\n                this.state.patientObject.consultations[i].next_consul.seconds *\r\n                  1000\r\n              );\r\n              if (newDate >= currentDate) {\r\n                appt1.push(this.state.patientObject.consultations[i]);\r\n              } else {\r\n                appt2.push(this.state.patientObject.consultations[i]);\r\n              }\r\n            }\r\n            */\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  searchDoctors = () => {};\r\n\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n    const { upcomingAppointments, recentAppointments } = this.state;\r\n\r\n    console.log(\"upcomingAppointments down: \", upcomingAppointments);\r\n    console.log(\"recentAppointments down: \", recentAppointments);\r\n\r\n    if (this.state.loaded === false) {\r\n      return <Lottie options={defaultOptions} height={400} width={400} />;\r\n    } else if (this.state.loaded === true) {\r\n      return (\r\n        <div id=\"dashboard\">\r\n          {!this.state.errorTrue && this.state.loaded ? (\r\n            <div>\r\n              <Sidebar type=\"patient\" />\r\n              <div id=\"dashBody\">\r\n                <h1>Welcome back, {this.state.patientObject.name}</h1>\r\n                <div id=\"patHeader\">\r\n                  <Modal\r\n                    onRequestClose={() => {\r\n                      this.setState({ modalOpen: false });\r\n                    }}\r\n                    isOpen={this.state.modalOpen}\r\n                  >\r\n                    <h1>Find the doctor you need.</h1>\r\n                    <TextField placeholder=\"Search\" />\r\n\r\n                    {this.state.doctors.map((doc) => {\r\n                      return (\r\n                        <Card style={{ width: \"50%\", margin: \"auto\" }}>\r\n                          <CardActionArea>\r\n                            <CardContent>\r\n                              <h3>\r\n                                {doc.data.name} - {doc.data.speciality}\r\n                              </h3>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                          <CardActions>\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              startIcon={<SearchIcon />}\r\n                              color=\"primary\"\r\n                            >\r\n                              MAKE AN APPOINTMENT\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"35%\" }}\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Learn More\r\n                            </Button>\r\n                          </CardActions>\r\n                        </Card>\r\n                      );\r\n                    })}\r\n                  </Modal>\r\n\r\n                  <Button\r\n                    startIcon={<SearchIcon style={{ marginLeft: \"1%\" }} />}\r\n                    variant=\"outlined\"\r\n                    onClick={() => {\r\n                      this.setState({ modalOpen: true });\r\n                    }}\r\n                  >\r\n                    SEARCH DOCTORS\r\n                  </Button>\r\n                </div>\r\n\r\n                <h2>Upcoming Appointments</h2>\r\n                <PatRow\r\n                  dataType=\"nodata\"\r\n                  items={[\r\n                    \"name\",\r\n                    \"last_consul\",\r\n                    \"next_consul\",\r\n                    \"when1\",\r\n                    \"when2\",\r\n                  ]}\r\n                  data={upcomingAppointments}\r\n                />\r\n\r\n                <h2>Recent appointments</h2>\r\n                <PatRow\r\n                  dataType=\"nodata\"\r\n                  items={[\r\n                    \"name\",\r\n                    \"last_consul\",\r\n                    \"next_consul\",\r\n                    \"when1\",\r\n                    \"when2\",\r\n                  ]}\r\n                  data={recentAppointments}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\" //<h1></h1>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(PatDash);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\About.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\DocProfile.js",["136"],"import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport animationData from \"../images/doctor-profile.json\";\r\nimport Lottie from \"react-lottie\";\r\nimport firebase from \"../firebase\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nexport default class DocProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      isDoctor: null,\r\n      speciality: \"\",\r\n      doctorObject: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Doctors\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            if (!doc.exists) {\r\n              alert(\"Error.\");\r\n              this.props.history.push(\"/doctor-dashboard/login\");\r\n            } else {\r\n              this.setState({\r\n                email: cred.email,\r\n                doctorObject: doc.data(),\r\n                password: cred.password,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n\r\n    const { email, doctorObject, password } = this.state;\r\n    console.log(\"email: \", email);\r\n    console.log(\"doctorObject: \", doctorObject.email);\r\n    console.log(doctorObject.password);\r\n    return (\r\n      <div id=\"dashboard\">\r\n        <Sidebar type=\"doctor\" />\r\n        <h1 style={{ fontSize: 70 }}>My Profile</h1>\r\n        <div\r\n          id=\"dashBody2\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"10%\",\r\n          }}\r\n        >\r\n          <div id=\"content2\" style={{ margin: \"auto\" }}>\r\n            <h2>Email:</h2>\r\n            <br></br>\r\n            <TextField\r\n              style={{ width: \"100%\", marginBottom: \"8%\" }}\r\n              placeholder={doctorObject?.email}\r\n              id=\"standard-read-only-input\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <br />\r\n            <h2>Speciality:</h2>\r\n            <TextField\r\n              style={{ width: \"50vh\", marginBottom: \"8%\" }}\r\n              placeholder={doctorObject?.speciality}\r\n              id=\"standard-read-only-input\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <br />\r\n          </div>\r\n\r\n          <Lottie options={defaultOptions} height={500} width={500} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocPatients.js",["137","138"],"import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./DocPatients.css\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DocRow from \"./DocRow.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { columnsTotalWidthSelector } from \"@material-ui/data-grid\";\r\nimport PatDash from \"../PatDash\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nclass DocPatients extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      doctorObject: {},\r\n      appointments: [],\r\n      patients: [],\r\n      loaded: false,\r\n      errorTrue: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        this.setState({ email: cred.email, loaded: true });\r\n        //this.setState({ loaded: true });\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Doctors\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            this.setState({ doctorObject: doc.data() });\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err: \", err);\r\n            alert(\"Please sign in to continue.\");\r\n            this.props.history.push(\"/doctor-dashboard/docsignup\");\r\n            this.setState({ errorTrue: true });\r\n          });\r\n        console.log(\"IN BETWEEN\");\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Doctors\")\r\n          .doc(cred.email)\r\n          .collection(\"appointments\")\r\n          .onSnapshot((snapshot) => {\r\n            const appointments = [];\r\n            snapshot.forEach((doc) => {\r\n              appointments.push(doc.id);\r\n            });\r\n            this.setState({ appointments: appointments });\r\n          });\r\n\r\n        var pats = [];\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              if (this.state.appointments.includes(doc.id)) {\r\n                pats.push({ id: doc.id, data: doc.data() });\r\n              }\r\n            });\r\n            this.setState({ patients: pats });\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/docsignup\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { patients } = this.state;\r\n    return (\r\n      <div id=\"dashboard\">\r\n        {!this.state.errorTrue && this.state.loaded ? (\r\n          <div>\r\n            <Sidebar type=\"doctor\" />\r\n            <div id=\"dashBody\">\r\n              <h1>Patients</h1>\r\n              <TextField\r\n                label=\"Search patients\"\r\n                id=\"outlined-basic\"\r\n                style={{\r\n                  margin: 20,\r\n                  marginBottom: 30,\r\n                  borderRadius: 30,\r\n                }}\r\n              ></TextField>\r\n              <DocRow dataType=\"data\" items={[\"name\", \"bio\"]} data={patients} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\" //<h1></h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(DocPatients);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\PatProfile.js",["139","140","141"],"import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport animationData from \"../images/doctor-profile.json\";\r\nimport Lottie from \"react-lottie\";\r\nimport firebase from \"../firebase\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nexport default class PatProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      isDoctor: null,\r\n      speciality: \"\",\r\n      patientObject: {},\r\n      bio: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            if (!doc.exists) {\r\n              alert(\"Error.\");\r\n              this.props.history.push(\"/doctor-dashboard/login\");\r\n            } else {\r\n              this.setState({\r\n                email: cred.email,\r\n                patientObject: doc.data(),\r\n                password: cred.password,\r\n                bio: doc.data().bio,\r\n                name: doc.data().name,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  updateRecord() {\r\n    if (this.state.bio.length > 0 && this.state.name.length > 0) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"Patients\")\r\n        .doc(this.state.email)\r\n        .update({\r\n          bio: this.state.bio,\r\n          name: this.state.name,\r\n        })\r\n        .then(() => alert(\"Updated.\"))\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    } else {\r\n      alert(\"Invalid inputs.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\",\r\n      },\r\n    };\r\n\r\n    const { email, patientObject, password } = this.state;\r\n    var bio = patientObject.bio;\r\n    console.log(bio);\r\n    return (\r\n      <div id=\"dashboard\">\r\n        <Sidebar type=\"patient\" />\r\n        <h1 style={{ fontSize: 70 }}>My Profile</h1>\r\n        <div\r\n          id=\"dashBody2\"\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginLeft: \"10%\",\r\n          }}\r\n        >\r\n          <div id=\"content2\" style={{ margin: \"auto\" }}>\r\n            <h2>Email:</h2>\r\n            <br></br>\r\n            <TextField\r\n              style={{ width: \"100%\", marginBottom: \"8%\" }}\r\n              placeholder={patientObject?.email}\r\n              id=\"standard-read-only-input\"\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n            <br />\r\n            <h2>Name:</h2>\r\n\r\n            <TextField\r\n              style={{ width: \"100%\", marginBottom: \"8%\" }}\r\n              placeholder={patientObject?.name}\r\n              id=\"standard-read-only-input\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => {\r\n                this.setState({ name: e.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            <h2>Bio:</h2>\r\n            <textarea\r\n              style={{\r\n                width: \"60vh\",\r\n                height: \"25vh\",\r\n                resize: \"none\",\r\n                textAlign: \"left\",\r\n                borderColor: \"lightblue\",\r\n              }}\r\n              onChange={(e) => {\r\n                this.setState({ bio: e.target.value });\r\n              }}\r\n            >\r\n              {patientObject?.bio}\r\n            </textarea>\r\n            <div\r\n              className=\"button_cont\"\r\n              align=\"center\"\r\n              style={{ marginTop: 10 }}\r\n              onClick={() => {\r\n                this.updateRecord();\r\n              }}\r\n            >\r\n              <a className=\"example_e\" rel=\"nofollow noopener\">\r\n                <strong>UPDATE</strong>\r\n              </a>\r\n            </div>\r\n            <br />\r\n          </div>\r\n\r\n          <Lottie options={defaultOptions} height={500} width={500} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Room.js",["142"],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocPayments.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocConsultations.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatPrescriptions.js",["143","144","145","146"],"import React from \"react\";\r\nimport \"./PatDash.css\";\r\nimport firebase from \"../../firebase\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport DocRow from \"../Doctor/DocRow.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nclass PatPrescriptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      references: [],\r\n      patientObject: {},\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        this.setState({ email: cred.email });\r\n        this.setState({ loaded: true });\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            this.setState({ patientObject: doc.data() });\r\n            //console.log(\"patientObject: \", this.state.patientObject);\r\n          });\r\n\r\n        var storageRef = firebase.storage().ref();\r\n        storageRef\r\n          .child(`${this.state.email}`)\r\n          .listAll()\r\n          .then((res) => {\r\n            var refs = [];\r\n            res.items.forEach(function (folderRef) {\r\n              //console.log(\"folderRef: \", folderRef);\r\n              refs.push(folderRef.name);\r\n            });\r\n            this.setState({ references: refs });\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n\r\n    document.title = \"My Prescriptions\";\r\n  }\r\n\r\n  handleClick(ref) {\r\n    firebase\r\n      .storage()\r\n      .ref()\r\n      .child(`${this.state.email}/${ref}`)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        //console.log(\"url: \", url);\r\n        window.location.href = url;\r\n        // var xhrequest = new XMLHttpRequest();\r\n        // xhrequest.responseType = \"blob\";\r\n        // xhrequest.onload = ((event)=>{var blob = xhr.response;}\r\n        //\r\n        // };\r\n        // xhrequest.open(\"GET\", url);\r\n        // xhrequest.send();\r\n        // const element = document.createElement(\"a\");\r\n        // const file = new Blob([ref.value], {\r\n        //   type: \"text/plain\",\r\n        //   name: \"prescription\",\r\n        // });\r\n        // console.log();\r\n        // element.href = URL.createObjectURL(file);\r\n        // element.download = `${ref}.txt`;\r\n        // document.body.appendChild(element);\r\n        // element.click();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\">\r\n        {!this.state.errorTrue && this.state.loaded ? (\r\n          <div>\r\n            <Sidebar type=\"patient\" />\r\n            <div id=\"dashBody\">\r\n              <h1>Prescriptions</h1>\r\n              <br />\r\n              {this.state.references.length > 0 ? (\r\n                <div>\r\n                  <h2 style={{ marginRight: \"50%\" }}>\r\n                    Here are the prescriptions that you have been given:{\" \"}\r\n                  </h2>\r\n                  <br />\r\n                  {this.state.references.map((ref, i) => (\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"flex-start\",\r\n                        margin: 0,\r\n                        paddingBottom: \"5%\",\r\n                      }}\r\n                    >\r\n                      <center>\r\n                        {\" \"}\r\n                        <br />\r\n                      </center>\r\n                      <br />\r\n                      <Card\r\n                        style={{\r\n                          width: \"50%\",\r\n                          fontSize: 5,\r\n                        }}\r\n                        onClick={() => {\r\n                          this.handleClick(ref);\r\n                        }}\r\n                        key={i}\r\n                      >\r\n                        <CardActionArea>\r\n                          <CardContent>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h5\"\r\n                              component=\"h3\"\r\n                            >\r\n                              <p style={{ fontSize: 20 }}>\r\n                                {ref.split(\".\")[0]}\r\n                              </p>\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"textSecondary\"\r\n                              component=\"p\"\r\n                            ></Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions></CardActions>\r\n                      </Card>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <h2>\r\n                  Nothing to show here currently! Book a doctor today and get\r\n                  your prescription!\r\n                </h2>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\" //<h1></h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PatPrescriptions);\r\n// <button\r\n//                 key={i}\r\n//                 onClick={() => {S\r\n//                   this.handleClick(ref);\r\n//                 }}\r\n//               >\r\n//                 {ref.split(\".\")[0]}\r\n//               </button>\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatPayments.js",["147"],"import React from \"react\";\r\nimport \"./PatDash.css\";\r\nimport firebase from \"../../firebase\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport DocRow from \"../Doctor/DocRow.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass PatPayments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      userID: \"\",\r\n      patientObject: {},\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      if (cred) {\r\n        this.setState({ email: cred.email });\r\n        this.setState({ loaded: true });\r\n        console.log(\"cred patient: \", cred);\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            this.setState({ patientObject: doc.data() });\r\n            console.log(\"patientObject: \", this.state.patientObject);\r\n          });\r\n      } else {\r\n        alert(\"Please sign in to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"dashboard\">\r\n        {!this.state.errorTrue && this.state.loaded ? (\r\n          <div>\r\n            <Sidebar type=\"patient\" />\r\n            <div id=\"dashBody\">\r\n              <h1>Payments</h1>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\" //<h1></h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PatPayments);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatConsultations.js",["148"],"import React from \"react\";\r\nimport \"./PatDash.css\";\r\nimport firebase from \"../../firebase\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport PatRow from \"./PatRow.js\";\r\nimport DocRow from \"../Doctor/DocRow.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass PatConsultations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      patientObject: { consultations: [] },\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((cred) => {\r\n      console.log(\"cred patient 1 : \", cred);\r\n      if (cred) {\r\n        this.setState({ email: cred.email });\r\n\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Patients\")\r\n          .doc(cred.email)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              this.setState({ patientObject: doc.data() });\r\n            } else {\r\n              alert(\"Error.\");\r\n            }\r\n          });\r\n        console.log(this.state.patientObject);\r\n\r\n        this.setState({ loaded: true });\r\n      } else {\r\n        alert(\"Please sign in to continue.\");\r\n        this.props.history.push(\"/doctor-dashboard/login\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { patientObject } = this.state;\r\n    return (\r\n      <div id=\"dashboard\">\r\n        {this.state.loaded ? (\r\n          <div>\r\n            <Sidebar type=\"patient\" />\r\n            <div id=\"dashBody\">\r\n              <h1>Consultations</h1>\r\n              <PatRow\r\n                dataType=\"nodata\"\r\n                items={[\"name\", \"when1\", \"when2\", \"last_consul\", \"next_consul\"]}\r\n                data={patientObject?.consultations}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\" //<h1></h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PatConsultations);\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\SpecialityData.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Doctor\\DocRow.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Patient\\PatRow.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\firebase.js",[],"C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\Sidebar.js",["149"],"import React, { useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { SidebarDocData, SidebarPatData } from \"./SidebarData.js\";\r\nimport { IconContext } from \"react-icons\";\r\nimport logo from \"../images/logo.png\";\r\nimport firebase from \"../firebase\";\r\nfunction Sidebar(props) {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n  const toMap = props.type === \"doctor\" ? SidebarDocData : SidebarPatData;\r\n\r\n  return (\r\n    <div id=\"side\">\r\n      <img\r\n        src={logo}\r\n        alt=\"logo\"\r\n        style={{\r\n          width: \"70%\",\r\n          minWidth: \"60%\",\r\n          display: \"flex\",\r\n          position: \"relative\",\r\n        }}\r\n      />\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <div className=\"navbar\">\r\n          <NavLink activeStyle={{ color: \"red\" }} to=\"#\" className=\"menu-bars\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </NavLink>\r\n        </div>\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n            <li className=\"navbar-toggle\">\r\n              <NavLink\r\n                activeStyle={{ color: \"red\" }}\r\n                to=\"#\"\r\n                className=\"menu-bars\"\r\n              >\r\n                <AiIcons.AiOutlineClose style={{ marginRight: \"1%\" }} />\r\n              </NavLink>\r\n            </li>\r\n            {toMap.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cName}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n      <div\r\n        onClick={() => {\r\n          firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n              this.props.history.push(\"/doctor-dashboard/login\");\r\n            });\r\n        }}\r\n        className=\"button_cont\"\r\n        align=\"center\"\r\n        style={{ marginTop: 10 }}\r\n      >\r\n        <a className=\"example_e\" rel=\"nofollow noopener\">\r\n          <strong>SIGN OUT</strong>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Aritra Kar\\Desktop\\JS_Projects\\doctor_dashboard\\src\\components\\SidebarData.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":19},{"ruleId":"154","severity":1,"message":"158","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":19},{"ruleId":"154","severity":1,"message":"158","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":33,"column":7,"nodeType":"161","messageId":"162","endLine":33,"endColumn":13},{"ruleId":"154","severity":1,"message":"163","line":57,"column":34,"nodeType":"156","messageId":"157","endLine":57,"endColumn":42},{"ruleId":"154","severity":1,"message":"164","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":35},{"ruleId":"154","severity":1,"message":"165","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":15},{"ruleId":"154","severity":1,"message":"166","line":80,"column":13,"nodeType":"156","messageId":"157","endLine":80,"endColumn":18},{"ruleId":"154","severity":1,"message":"163","line":80,"column":35,"nodeType":"156","messageId":"157","endLine":80,"endColumn":43},{"ruleId":"167","severity":1,"message":"168","line":144,"column":15,"nodeType":"169","endLine":144,"endColumn":64},{"ruleId":"167","severity":1,"message":"170","line":183,"column":17,"nodeType":"169","endLine":183,"endColumn":74},{"ruleId":"154","severity":1,"message":"171","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":19},{"ruleId":"154","severity":1,"message":"172","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":21},{"ruleId":"154","severity":1,"message":"158","line":15,"column":8,"nodeType":"156","messageId":"157","endLine":15,"endColumn":14},{"ruleId":"154","severity":1,"message":"171","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},{"ruleId":"154","severity":1,"message":"171","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":70,"column":9,"nodeType":"169","endLine":70,"endColumn":58},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'loaded'.","ObjectExpression","unexpected","'password' is assigned a value but never used.","'columnsTotalWidthSelector' is defined but never used.","'PatDash' is defined but never used.","'email' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DocRow' is defined but never used.","'AddCircleIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]